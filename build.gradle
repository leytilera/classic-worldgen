buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "tilera"
            url = "https://maven.tilera.xyz"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath ('net.anvilcraft:gradlehaxe:0.1.0') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'haxe'
apply plugin: 'maven-publish'
apply from: './gradle/scripts/mixins.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "2.0.0-alpha.2"
group= "dev.tilera.modding"
archivesBaseName = "cwg"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    replaceIn "dev/tilera/cwg/Constants.java"
    replace "{VERSION}", project.version
}


repositories {
    mavenCentral()
    maven {
        url = "https://maven.tilera.xyz"
    }
    maven { url 'https://jitpack.io' }
    maven {
        name 'Overmind forge repo mirror'
        url 'https://gregtech.overminddl1.com/'
    }
}

sourceSets {
    hx {
        haxeopts {
            includePackage "dev.tilera.cwg"
            remapHaxePackage "dev.tilera.cwg.haxe"
        }
    }
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

configurations {
    hxImplementation.extendsFrom implementation
}

dependencies {
    implementation "com.github.tox1cozZ:mixin-booter-legacy:1.1.2"
    annotationProcessor "com.github.tox1cozZ:mixin-booter-legacy:1.1.2:processor"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching('mcmod.info') {
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
}

jar {
    manifest {
        attributes([
                "FMLCorePlugin"           : "dev.tilera.cwg.core.CWGCorePlugin",
                "FMLCorePluginContainsFMLMod": "true",
                "FMLAT": "cwg_at.cfg"
        ])
    }
    from sourceSets.hx.output
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.hx.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.hx.allSource
    classifier = 'sources'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archivesBaseName

            artifact deobfJar
            artifact sourcesJar
            artifact jar
        }
    }

    repositories {
        if (project.hasProperty('mvnURL')) {
                maven {
                    credentials {
                        username findProperty("mvnUsername")
                        password findProperty("mvnPassword")
                    }
                    url = findProperty("mvnURL")
                }
        }
        else {
                mavenLocal()
        }
    }
}

mixin {
    mixinRefMapName = 'cwg.refmap.json'
}